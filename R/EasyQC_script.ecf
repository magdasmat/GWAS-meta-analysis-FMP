#################################################################################################################
##### EasyQC-script to perform study-level and meta-level QC on imputed 1000G data
##### EasyQC version: 9.0
#################################################################################################################
#
# Install EasyQC if not already installed
# install.packages('https://homepages.uni-regensburg.de/~wit59712/easyqc/EasyQC_23.8.tar.gz', repos = NULL, type = 'source')
# Load the library
# library(EasyQC)
# Run the command in R: EasyQC("/path/to/EasyQCconfig.ecf")

### Please DEFINE here format and input columns of the following EASYIN files

DEFINE        --pathOut /path/to/output/directory
--strMissing NA
--strSeparator COMMA
--acolIn SNPID;A1;A2;AF_coded;BETA;SE;P;n_total;oevar_imp
--acolInClasses character;character;character;numeric;numeric;numeric;numeric;numeric;numeric
--acolNewName cptid;EFFECT_ALLELE;OTHER_ALLELE;EAF;BETA;SE;PVAL;N;IMPUTATION

# Define file paths and study names

EASYIN    --fileIn /path/to/input/file1
EASYIN    --fileIn /path/to/input/file2
EASYIN    --fileIn /path/to/input/file3
EASYIN    --fileIn /path/to/input/file4
EASYIN    --fileIn /path/to/input/file5

# Add more input files as needed

## ...

#################################################################################################################
## EASYQC Scripting interface:

START EASYQC

####################
## 1. Sanity checks: 

CLEAN --rcdClean is.na(EFFECT_ALLELE)&is.na(OTHER_ALLELE) --strCleanName numDrop_Missing_Alleles
CLEAN --rcdClean is.na(PVAL) --strCleanName numDrop_Missing_P
CLEAN --rcdClean is.na(BETA) --strCleanName numDrop_Missing_BETA
CLEAN --rcdClean is.na(SE) --strCleanName numDrop_Missing_SE
CLEAN --rcdClean is.na(EAF) --strCleanName numDrop_Missing_EAF
CLEAN --rcdClean is.na(N) --strCleanName numDrop_Missing_N
CLEAN --rcdClean is.na(IMPUTATION) --strCleanName numDrop_Missing_Imputation

CLEAN --rcdClean PVAL<0|PVAL>1 --strCleanName numDrop_invalid_PVAL
CLEAN --rcdClean SE<=0|SE==Inf|SE>=50 --strCleanName numDrop_invalid_SE
CLEAN --rcdClean abs(BETA)>=50 --strCleanName numDrop_invalid_BETA
CLEAN --rcdClean EAF<0|EAF>1 --strCleanName numDrop_invalid_EAF
CLEAN --rcdClean IMPUTATION<0 --strCleanName numDrop_invalid_IMPUTATION

## Round off significant digits for certain columns
EDITCOL --rcdEditCol signif(EAF,4) --colEdit EAF
EDITCOL --rcdEditCol signif(BETA,4) --colEdit BETA
EDITCOL --rcdEditCol signif(SE,4) --colEdit SE
EDITCOL --rcdEditCol signif(PVAL,4) --colEdit PVAL

####################
## 2. Prepare files for filtering and apply minimum thresholds: 

## Exclude monomorphic SNPs:
CLEAN --rcdClean (EAF==0)|(EAF==1) --strCleanName numDrop_Monomorph

## Create column with minor allele count:
#The Minor Allele Count function remove/blacklist markers based on Minor/Alternate Allele Count (MAC). Use it to remove noise, sequencing errors or low polymorphism markers. Some analysis performs better with the full spectrum of allele frequency, so careful with high threshold that inevitably results in biaises.
###### EAF i 1-EAF es el MAF. 
ADDCOL --rcdAddCol signif(2*pmin(EAF,1-EAF)*N,4) --colOut MAC
ADDCOL --rcdAddCol signif(2*pmin(EAF,1-EAF)*N*IMPUTATION,4) --colOut eMAC
ADDCOL --rcdAddCol paste("+",sep="") --colOut STRAND

## If you do not want to apply filters at this stage, please comment out the following rows or amend the 
## filter thresholds according to your needs. 
CLEAN --rcdClean N<30 --strCleanName numDrop_Nlt30
CLEAN --rcdClean eMAC<=6 --strCleanName numDrop_eMAClet6
CLEAN --rcdClean (!is.na(IMPUTATION))&IMPUTATION<0.3 --strCleanName numDrop_lowImpQual

####################
## 3. Harmonization of allele coding (A/C/G/T or I/D)

## Uncomment this if needed
# HARMONIZEALLELES 	--colInA1 EFFECT_ALLELE 
#			--colInA2 OTHER_ALLELE

####################
## 4. Harmonization of marker names (compile 'cptid')

## Update the mapping file paths
# CREATECPTID --fileMap [path_to_mapping_file]
#			--colMapMarker rsmid
#			--colMapChr chr
#			--colMapPos pos
#			--colInMarker cptid
#			--colInA1 EFFECT_ALLELE
#			--colInA2 OTHER_ALLELE
#			--colInChr CHR
#			--colInPos POS

## 4. Harmonization of marker names (compile 'cptid')

## Update the mapping file paths
#CREATECPTID --fileMap [path_to_mapping_file]
#			--colMapMarker rsmid
#			--colMapChr chr
#			--colMapPos pos
#			--colInMarker cptid
#			--colInA1 EFFECT_ALLELE
#			--colInA2 OTHER_ALLELE
#			--colInChr CHR
#			--colInPos POS

## TO DO: 	Define the path to the reference file 'rsmid_map.1000G_ALL_p1v3.merged_mach_impute.v1.txt.gz' at --fileMap.		
## 			The mapping file can be found on our website www.genepi-regensburg.de/easyqc.
## 			In case CHR or POS are not given in the input files, please remove "--colInChr CHR" and "--colInPos POS" from the 
## 			command and remove "CHR;POS;" from --acolIn and --acolNewName as well as the respective "character;integer;"
## 			from --acolInClasses 
####################
## 5. Filter duplicate SNPs
## This will count duplicates and throw out the SNP with the lower sample size:

CLEANDUPLICATES		--colInMarker cptid 
--strMode samplesize 
--colN N

## The duplicates are written to the output in a separate file "*duplicates.txt"

####################

## 6. Allele frequency (AF) Checks

### TO DO: 	Define the path to the reference file 'allelefreq.1000G_[ANCESTRY]_p1v3.impute_legends.noMono.noDup.noX.v2.gz' at --fileRef:
### 		Please use the reference file ancestry that matches the ancestry of the study

MERGE 	--colInMarker cptid
--fileRef /home/resources_public/refpanels/CHARGErefpanels/TOPMed_AlleleFreq_[ANCESTRY]_23chr.txt.gz # WE USED TOPMED reference panels for CHARGE cohorts
--acolIn cptid;ea;oa;eaf 
--strSeparator TAB
--acolInClasses character;character;character;numeric
--strRefSuffix .ref
--colRefMarker cptid
--blnWriteNotInRef 1

ADJUSTALLELES 	--colInStrand STRAND
--colInA1 EFFECT_ALLELE 
--colInA2 OTHER_ALLELE 
--colInFreq EAF
--colInBeta BETA
--colRefA1 ea.ref
--colRefA2 oa.ref
--blnMetalUseStrand 1
--blnRemoveMismatch 1
--blnRemoveInvalid 1

## All mismatches will be removed (e.g. A/T in input, A/C in reference)		

AFCHECK --colInFreq EAF
--colRefFreq eaf.ref
--numLimOutlier 0.2
--blnPlotAll 1

## blnPlotAll 0 causes that only outlying SNPs with |Freq-Freq.ref|>0.2 will be plotted (way less computational time)

####################

## 7. Rearrange columns and write CLEANED output

GETCOLS --acolOut cptid;EFFECT_ALLELE;OTHER_ALLELE;EAF;IMPUTATION;BETA;SE;PVAL;N;MAC;eMAC
WRITE	--strPrefix CLEANED. 
--strMissing NA 
--strMode gz

####################
## 8. Plot Z versus P

PZPLOT	--colBeta BETA 
--colSe SE 
--colPval PVAL

####################
## 9. QQ plot

QQPLOT	--acolQQPlot PVAL
--numPvalOffset 0.05
--strMode subplot

####################
## 10. Summary Stats post-QC

CALCULATE --rcdCalc max(N,na.rm=T) 
--strCalcName N_max
GC	--colPval PVAL 
--blnSuppressCorrection 1

RPLOT	--rcdRPlotX N_max
--rcdRPlotY Lambda.PVAL.GC
--arcdAdd2Plot abline(h=1,col='orange');abline(h=1.1,col='red')
--strAxes lim(0,NULL,0,NULL)
--strPlotName GC-PLOT

####################
## 11. SE-N Plot - Trait transformation

CALCULATE --rcdCalc median(SE,na.rm=T) --strCalcName SE_median
CALCULATE --rcdCalc median(1/sqrt(2*EAF*(1-EAF)), na.rm=T) --strCalcName c_trait_transf

RPLOT 	--rcdRPlotX sqrt(N_max)
--rcdRPlotY c_trait_transf/SE_median
--arcdAdd2Plot abline(0,1,col='orange')
--strAxes zeroequal
--strPlotName SEN-PLOT

STOP EASYQC
#################################################################################################################
#################################################################################################################
#
#
#
#
#
# To check if everything went well we check:
# 1. the Plots ( check the paper of easyqc to interpretate the plots doi:10.1038)
# 2. Check the head of cleaned files to check if there are missing values. 
#
